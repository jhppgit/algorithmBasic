package algorithm.quiz.ch05;

import java.util.Scanner;
import java.util.Stack;

import algorithm.ch04.IntStack;

// recur3 메서드를 비재귀적으로 구현
public class Q6 {
	static void recur3(int n) {
		if (n > 0) {
			recur3(n - 1);
			recur3(n - 2);
			System.out.println(n);
		}
	}
	
	static void nonRecur3(int n) {
		IntStack s = new IntStack(n * 2);
		s.push(n);
		while (true) {
			if (n > 0) {
				s.push(n - 1);
				s.push(n - 2);
				continue;
			}
			if (!s.isEmpty()) {
				n = s.pop();
				System.out.println(n);
			}
			
		}
	}
	 static void recur4(int n) {
	        Stack<Integer> stack = new Stack<>();

	        // 초기 값 n을 스택에 추가
	        stack.push(n);

	        // 스택이 빌 때까지 반복
	        while (!stack.isEmpty()) {
	            n = stack.pop();

	            if (n > 0) {
	                System.out.println(n);   // 비재귀적으로 출력하는 위치 조정

	                stack.push(n - 2);       // 두 번째 재귀 호출을 위한 값
	                stack.push(n - 1);       // 첫 번째 재귀 호출을 위한 값
	            }
	        }
	    }
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int x = sc.nextInt();
		sc.close();
		System.out.println("재귀");
		recur3(x);
		System.out.println("gpt");
		recur4(x);
		System.out.println("비재귀");
		nonRecur3(x);
	}
}
