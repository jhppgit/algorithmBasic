package algorithm.quiz.ch05;

import java.util.Scanner;
import java.util.Stack;

import algorithm.ch04.IntStack;

// recur3 메서드를 비재귀적으로 구현
public class Q6 {
	static void recur3(int n) {
		if (n > 0) {
			recur3(n - 1);
			recur3(n - 2);
			System.out.println(n);
		}
	}
	
	static void nonRecur3(int n) {
		IntStack s1 = new IntStack(n * 2);
		IntStack s2 = new IntStack(n * 2); // 하면 1, 안하면 0
		while(true) {
			if (n > 0) {
				s1.push(n);
				s2.push(1);
				n--;
				continue;
			}
			if (!s1.isEmpty()) {
				if (s2.peek() == 1) {
					n = s1.peek();
					s2.pop();
					s2.push(2);
					if (n > 2)
						n -= 2;
					continue;
				}
				if (s2.peek() == 2) {
					n = s1.pop();
					if (n > 0)
						System.out.println(n);
					s2.pop();
					n = s1.pop();
					continue;
				}
			}
			break;
		}
	}
	
	static void test(int n) {
		if (n > 0) {
			test(n - 1);
			System.out.println(n);
			test(n - 2);
		}
	}
	
	static void test2(int n) {
		while (n > 0) {
			test(n - 1);
			System.out.println(n);
			n -= 2;
		}
	}
	
	static void test3(int n) {
		IntStack s = new IntStack(n);
		while (n > 0) {
			s.push(n);
			n--;
			continue;
		}
	}
	
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int x = sc.nextInt();
		sc.close();
		System.out.println("재귀");
		recur3(x);
		System.out.println("비재귀");
		nonRecur3(x);
	}
}
